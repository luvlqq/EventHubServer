// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int          @id @default(autoincrement())
  email         String       @unique
  firstName     String
  lastName      String
  biography     String?
  avatar        String?
  hashPassword  String
  createdAt     DateTime     @default(now())
  isAdmin       Boolean
  joinEvents    Int
  userEvents    Event        @relation(fields: [joinEvents], references: [id])
  historyEvents String?
  createdEvents String?
  reviews       Reviews[]
  tickets       Tickets[]
  comments      Comments[]
  favourites    Favourites[]
}

model Event {
  id             Int          @id @default(autoincrement())
  eventName      String
  description    String
  organizer      String
  bannerImg      String?
  createdAt      DateTime     @default(now())
  planedAt       DateTime
  theme          String?
  place          String?
  price          Int?
  availablePlace Int?
  reviews        Reviews[]
  comments       Comments[]
  event          Favourites[]
  user           User[]
}

model Tickets {
  id      Int    @id @default(autoincrement())
  event   String
  type    String
  status  String
  ownerId Int
  user    User   @relation(fields: [ownerId], references: [id])
}

model Messages {
  id            Int      @id @default(autoincrement())
  messageAuthor String
  createdAt     DateTime @default(now())
  messageText   String
}

model Favourites {
  id      Int   @id
  userId  Int
  user    User  @relation(fields: [userId], references: [id])
  eventId Int
  event   Event @relation(fields: [eventId], references: [id])
}

model Partners {
  id          Int     @id @default(autoincrement())
  name        String
  description String
  img         String?
  mail        String
}

model Comments {
  id          Int      @id @default(autoincrement())
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
  eventId     Int
  event       Event    @relation(fields: [eventId], references: [id])
  commentText String
  createdAt   DateTime @default(now())
}

model Reviews {
  id      Int   @id @default(autoincrement())
  userId  Int
  user    User  @relation(fields: [userId], references: [id])
  eventId Int
  event   Event @relation(fields: [eventId], references: [id])
  review  Int
}
